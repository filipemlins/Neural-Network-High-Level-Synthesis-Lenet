// ==============================================================
// File generated on Wed Jun 17 16:36:36 -03 2020
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
// SW Build 2405991 on Thu Dec  6 23:36:41 MST 2018
// IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
// Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv1_conv1_layer_weights_s_H__
#define __conv1_conv1_layer_weights_s_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv1_conv1_layer_weights_s_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 128;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv1_conv1_layer_weights_s_ram) {
        ram[0] = "0b10111101000000111101011010001110";
        ram[1] = "0b10111100110000011100001011001011";
        ram[2] = "0b00111110001111010000010110110001";
        ram[3] = "0b00111110110011110000001001111101";
        ram[4] = "0b00111110010011000011011001000100";
        ram[5] = "0b00111110011110110001011111010111";
        ram[6] = "0b00111101000010110011011000100101";
        ram[7] = "0b00111110010100101011100011111111";
        ram[8] = "0b10111101011100010010110010000010";
        ram[9] = "0b00111101100010110010100011100101";
        ram[10] = "0b00111101000111110111001000101111";
        ram[11] = "0b00111110100001111011000000011010";
        ram[12] = "0b10111110010011101011110101001001";
        ram[13] = "0b10111101100101100000011011010000";
        ram[14] = "0b00111101110000000011001111000110";
        ram[15] = "0b00111110000000010010000010001011";
        ram[16] = "0b00111110110010101001110000011001";
        ram[17] = "0b00111110110101001011010110110111";
        ram[18] = "0b00111101001010111001110100101000";
        ram[19] = "0b10111101111100110100100100010000";
        ram[20] = "0b00111101101111000010110100011001";
        ram[21] = "0b00111101101111010100110001001111";
        ram[22] = "0b10111100011010011110111111100100";
        ram[23] = "0b10111110011010101100011010010000";
        ram[24] = "0b00111101001101001010110000101111";
        ram[25] = "0b00111101111000011101100011110110";
        ram[26] = "0b00111110011001011100010110011101";
        ram[27] = "0b00111110110001000101000100110001";
        ram[28] = "0b10111110001010110010100011110001";
        ram[29] = "0b10111100011011100001101010101101";
        ram[30] = "0b00111110100011011010001000101001";
        ram[31] = "0b00111110111110001001011111100010";
        ram[32] = "0b10111001111001000000011000100001";
        ram[33] = "0b00111110000011111010101010100011";
        ram[34] = "0b10111101001010010100111001101011";
        ram[35] = "0b10111110011000000011101100111010";
        ram[36] = "0b10111110000110011110001001000011";
        ram[37] = "0b10111101010110111000111010111110";
        ram[38] = "0b10111100111100110101000111110010";
        ram[39] = "0b00111110010101111100000001111111";
        ram[40] = "0b10111101100100111001011110110101";
        ram[41] = "0b10111010100000000111101011000001";
        ram[42] = "0b00111110000111000110101110011010";
        ram[43] = "0b00111101100000001101001101111100";
        ram[44] = "0b00111110100010110101100000011110";
        ram[45] = "0b10111101010010000000111011010101";
        ram[46] = "0b10111011110001010011001101111101";
        ram[47] = "0b10111100110100110000001111011000";
        ram[48] = "0b10111110100000111000100101100000";
        ram[49] = "0b10111101110011100111110000101000";
        ram[50] = "0b00111110000101010111100110000100";
        ram[51] = "0b00111110110011000100010111011101";
        ram[52] = "0b10111110100110110101011110100001";
        ram[53] = "0b10111101110011001001100001111101";
        ram[54] = "0b00111011101111010111010001000001";
        ram[55] = "0b00111110111111011100101010011000";
        ram[56] = "0b10111110101001101100001010100000";
        ram[57] = "0b10111110001000110010101010011111";
        ram[58] = "0b00111110100111111100000101000110";
        ram[59] = "0b00111110100101110101000100000101";
        ram[60] = "0b00111011110001111010101110111101";
        ram[61] = "0b00111110000011110101110101110111";
        ram[62] = "0b00111110110001000100010010110000";
        ram[63] = "0b00111110110101000100001001001101";
        ram[64] = "0b00111110010110110001011110000011";
        ram[65] = "0b10111110101000010010000101001100";
        ram[66] = "0b10111110100110000010100100100010";
        ram[67] = "0b10111110101110110010110111110001";
        ram[68] = "0b00111110011111010010001110100011";
        ram[69] = "0b00111110110001101000110010101000";
        ram[70] = "0b00111110100011010110101101111010";
        ram[71] = "0b00111101100010010101100110111010";
        ram[72] = "0b00111101110111010001111111001000";
        ram[73] = "0b00111110000100001100111011011010";
        ram[74] = "0b00111110101110010001000010001001";
        ram[75] = "0b00111110110000100010010011100111";
        ram[76] = "0b10111110010110000101110000100111";
        ram[77] = "0b10111101100001010110000010101001";
        ram[78] = "0b10111110000101101011011001110000";
        ram[79] = "0b10111100101110011000010000011001";
        ram[80] = "0b00111101110110110110100100110100";
        ram[81] = "0b00111110011101110100001010110100";
        ram[82] = "0b00111110100011111011001110001110";
        ram[83] = "0b00111110110100101101110000101000";
        ram[84] = "0b10111101001000100001110000000001";
        ram[85] = "0b00111110001101010111100010100111";
        ram[86] = "0b00111110000000100001100101001100";
        ram[87] = "0b00111110100111011111010100111111";
        ram[88] = "0b10111110001101001110110010001010";
        ram[89] = "0b10111110100001111000111100100111";
        ram[90] = "0b10111110001001111001011111010010";
        ram[91] = "0b10111110001110001110000011101000";
        ram[92] = "0b10111101110110010101000111011111";
        ram[93] = "0b10111110101010010001100100000001";
        ram[94] = "0b10111110010110110111111111101011";
        ram[95] = "0b10111110110001010010111011101100";
        ram[96] = "0b00111110000110001100101111000001";
        ram[97] = "0b00111110100100001011001110101100";
        ram[98] = "0b00111110001000011000111111110111";
        ram[99] = "0b00111101100011011100001010101011";
        ram[100] = "0b10111110011010011011000110111001";
        ram[101] = "0b00111110001100001010001101010101";
        ram[102] = "0b00111110010010010001001011101100";
        ram[103] = "0b00111110100101101001100001110010";
        ram[104] = "0b10111110100010101100011100111100";
        ram[105] = "0b10111110001111010010001000000010";
        ram[106] = "0b00111101000000100000011011010011";
        ram[107] = "0b10111100101101000010111010100100";
        ram[108] = "0b10111101110010011110011010010100";
        ram[109] = "0b10111110101000100111111010011000";
        ram[110] = "0b10111101011110101101110000011011";
        ram[111] = "0b00111101100011000000011010000011";
        ram[112] = "0b10111101100001101100011000011010";
        ram[113] = "0b10111100100010110011001111000110";
        ram[114] = "0b10111110001110010011110101101110";
        ram[115] = "0b00111100100000110100010001001101";
        ram[116] = "0b10111110010001010101111111011100";
        ram[117] = "0b00111101010001101000011000001011";
        ram[118] = "0b00111101010100111000011111100001";
        ram[119] = "0b10111100111001111001011010111101";
        ram[120] = "0b10111110000001111010100001111010";
        ram[121] = "0b00111110000000100000000100011100";
        ram[122] = "0b00111101110000101000001100101111";
        ram[123] = "0b00111101100011010001010011001100";
        ram[124] = "0b10111110011101111110100010000111";
        ram[125] = "0b10111101100011110111110111010011";
        ram[126] = "0b00111110010111000011110101010100";
        ram[127] = "0b10111101101001010001010100011110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv1_conv1_layer_weights_s) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 128;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv1_conv1_layer_weights_s_ram* meminst;


SC_CTOR(conv1_conv1_layer_weights_s) {
meminst = new conv1_conv1_layer_weights_s_ram("conv1_conv1_layer_weights_s_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv1_conv1_layer_weights_s() {
    delete meminst;
}


};//endmodule
#endif
