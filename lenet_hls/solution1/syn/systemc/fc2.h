// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fc2_HH_
#define _fc2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenet_hls_fadd_32ns_32ns_32_5_full_dsp_1.h"
#include "lenet_hls_fmul_32ns_32ns_32_4_max_dsp_1.h"
#include "lenet_hls_fcmp_32ns_32ns_1_1_1.h"
#include "fc2_fc2_layer_weights.h"
#include "fc2_fc2_layer_bias.h"
#include "fc2_output.h"

namespace ap_rtl {

struct fc2 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_out< sc_lv<32> > out_V_din;
    sc_in< sc_logic > out_V_full_n;
    sc_out< sc_logic > out_V_write;
    sc_in< sc_lv<32> > in_V_dout;
    sc_in< sc_logic > in_V_empty_n;
    sc_out< sc_logic > in_V_read;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    fc2(sc_module_name name);
    SC_HAS_PROCESS(fc2);

    ~fc2();

    sc_trace_file* mVcdFile;

    fc2_fc2_layer_weights* fc2_layer_weights_U;
    fc2_fc2_layer_bias* fc2_layer_bias_U;
    fc2_output* output_U;
    lenet_hls_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>* lenet_hls_fadd_32ns_32ns_32_5_full_dsp_1_U38;
    lenet_hls_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>* lenet_hls_fmul_32ns_32ns_32_4_max_dsp_1_U39;
    lenet_hls_fcmp_32ns_32ns_1_1_1<1,1,32,32,1>* lenet_hls_fcmp_32ns_32ns_1_1_1_U40;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<24> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<14> > fc2_layer_weights_address0;
    sc_signal< sc_logic > fc2_layer_weights_ce0;
    sc_signal< sc_lv<32> > fc2_layer_weights_q0;
    sc_signal< sc_lv<7> > fc2_layer_bias_address0;
    sc_signal< sc_logic > fc2_layer_bias_ce0;
    sc_signal< sc_lv<32> > fc2_layer_bias_q0;
    sc_signal< sc_logic > out_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_logic > in_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond7_fu_260_p2;
    sc_signal< sc_lv<32> > output_q0;
    sc_signal< sc_lv<32> > reg_226;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<32> > grp_fu_213_p2;
    sc_signal< sc_lv<32> > reg_231;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<7> > indvarinc_fu_237_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<14> > next_mul_fu_254_p2;
    sc_signal< sc_lv<14> > next_mul_reg_338;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<7> > j_4_fu_266_p2;
    sc_signal< sc_lv<7> > j_4_reg_346;
    sc_signal< sc_lv<32> > tmp_43_reg_351;
    sc_signal< sc_lv<7> > i_7_fu_278_p2;
    sc_signal< sc_lv<7> > i_7_reg_359;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > exitcond6_fu_272_p2;
    sc_signal< sc_lv<32> > fc2_layer_weights_lo_reg_369;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<7> > output_addr_5_reg_374;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > grp_fu_217_p2;
    sc_signal< sc_lv<32> > tmp_41_reg_379;
    sc_signal< sc_lv<7> > i_6_fu_310_p2;
    sc_signal< sc_lv<7> > i_6_reg_387;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<1> > exitcond_fu_304_p2;
    sc_signal< sc_lv<32> > fc2_layer_bias_load_reg_402;
    sc_signal< sc_lv<32> > tmp_38_fu_322_p3;
    sc_signal< sc_lv<32> > tmp_38_reg_407;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<7> > output_address0;
    sc_signal< sc_logic > output_ce0;
    sc_signal< sc_logic > output_we0;
    sc_signal< sc_lv<32> > output_d0;
    sc_signal< sc_lv<7> > invdar_reg_156;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > tmp_s_fu_248_p2;
    sc_signal< sc_lv<7> > j_reg_167;
    sc_signal< sc_lv<14> > phi_mul_reg_178;
    sc_signal< sc_lv<7> > i_reg_190;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<7> > i1_reg_202;
    sc_signal< sc_lv<64> > tmp_fu_243_p1;
    sc_signal< sc_lv<64> > tmp_46_cast_fu_294_p1;
    sc_signal< sc_lv<64> > tmp_39_fu_299_p1;
    sc_signal< sc_lv<64> > tmp_37_fu_316_p1;
    sc_signal< sc_lv<32> > grp_fu_213_p1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<14> > tmp_42_cast_fu_284_p1;
    sc_signal< sc_lv<14> > tmp_40_fu_288_p2;
    sc_signal< sc_lv<1> > tmp_i_fu_221_p2;
    sc_signal< sc_lv<24> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<24> ap_ST_fsm_state1;
    static const sc_lv<24> ap_ST_fsm_state2;
    static const sc_lv<24> ap_ST_fsm_state3;
    static const sc_lv<24> ap_ST_fsm_state4;
    static const sc_lv<24> ap_ST_fsm_state5;
    static const sc_lv<24> ap_ST_fsm_state6;
    static const sc_lv<24> ap_ST_fsm_state7;
    static const sc_lv<24> ap_ST_fsm_state8;
    static const sc_lv<24> ap_ST_fsm_state9;
    static const sc_lv<24> ap_ST_fsm_state10;
    static const sc_lv<24> ap_ST_fsm_state11;
    static const sc_lv<24> ap_ST_fsm_state12;
    static const sc_lv<24> ap_ST_fsm_state13;
    static const sc_lv<24> ap_ST_fsm_state14;
    static const sc_lv<24> ap_ST_fsm_state15;
    static const sc_lv<24> ap_ST_fsm_state16;
    static const sc_lv<24> ap_ST_fsm_state17;
    static const sc_lv<24> ap_ST_fsm_state18;
    static const sc_lv<24> ap_ST_fsm_state19;
    static const sc_lv<24> ap_ST_fsm_state20;
    static const sc_lv<24> ap_ST_fsm_state21;
    static const sc_lv<24> ap_ST_fsm_state22;
    static const sc_lv<24> ap_ST_fsm_state23;
    static const sc_lv<24> ap_ST_fsm_state24;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<7> ap_const_lv7_53;
    static const sc_lv<14> ap_const_lv14_54;
    static const sc_lv<7> ap_const_lv7_78;
    static const sc_lv<7> ap_const_lv7_54;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state1();
    void thread_ap_block_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond6_fu_272_p2();
    void thread_exitcond7_fu_260_p2();
    void thread_exitcond_fu_304_p2();
    void thread_fc2_layer_bias_address0();
    void thread_fc2_layer_bias_ce0();
    void thread_fc2_layer_weights_address0();
    void thread_fc2_layer_weights_ce0();
    void thread_grp_fu_213_p1();
    void thread_i_6_fu_310_p2();
    void thread_i_7_fu_278_p2();
    void thread_in_V_blk_n();
    void thread_in_V_read();
    void thread_indvarinc_fu_237_p2();
    void thread_internal_ap_ready();
    void thread_j_4_fu_266_p2();
    void thread_next_mul_fu_254_p2();
    void thread_out_V_blk_n();
    void thread_out_V_din();
    void thread_out_V_write();
    void thread_output_address0();
    void thread_output_ce0();
    void thread_output_d0();
    void thread_output_we0();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_37_fu_316_p1();
    void thread_tmp_38_fu_322_p3();
    void thread_tmp_39_fu_299_p1();
    void thread_tmp_40_fu_288_p2();
    void thread_tmp_42_cast_fu_284_p1();
    void thread_tmp_46_cast_fu_294_p1();
    void thread_tmp_fu_243_p1();
    void thread_tmp_s_fu_248_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
