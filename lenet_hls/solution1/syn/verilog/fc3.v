// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fc3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read
);

parameter    ap_ST_fsm_state1 = 59'd1;
parameter    ap_ST_fsm_state2 = 59'd2;
parameter    ap_ST_fsm_state3 = 59'd4;
parameter    ap_ST_fsm_state4 = 59'd8;
parameter    ap_ST_fsm_state5 = 59'd16;
parameter    ap_ST_fsm_state6 = 59'd32;
parameter    ap_ST_fsm_state7 = 59'd64;
parameter    ap_ST_fsm_state8 = 59'd128;
parameter    ap_ST_fsm_state9 = 59'd256;
parameter    ap_ST_fsm_state10 = 59'd512;
parameter    ap_ST_fsm_state11 = 59'd1024;
parameter    ap_ST_fsm_state12 = 59'd2048;
parameter    ap_ST_fsm_state13 = 59'd4096;
parameter    ap_ST_fsm_state14 = 59'd8192;
parameter    ap_ST_fsm_state15 = 59'd16384;
parameter    ap_ST_fsm_state16 = 59'd32768;
parameter    ap_ST_fsm_state17 = 59'd65536;
parameter    ap_ST_fsm_state18 = 59'd131072;
parameter    ap_ST_fsm_state19 = 59'd262144;
parameter    ap_ST_fsm_state20 = 59'd524288;
parameter    ap_ST_fsm_state21 = 59'd1048576;
parameter    ap_ST_fsm_state22 = 59'd2097152;
parameter    ap_ST_fsm_state23 = 59'd4194304;
parameter    ap_ST_fsm_state24 = 59'd8388608;
parameter    ap_ST_fsm_state25 = 59'd16777216;
parameter    ap_ST_fsm_state26 = 59'd33554432;
parameter    ap_ST_fsm_state27 = 59'd67108864;
parameter    ap_ST_fsm_state28 = 59'd134217728;
parameter    ap_ST_fsm_state29 = 59'd268435456;
parameter    ap_ST_fsm_state30 = 59'd536870912;
parameter    ap_ST_fsm_state31 = 59'd1073741824;
parameter    ap_ST_fsm_state32 = 59'd2147483648;
parameter    ap_ST_fsm_state33 = 59'd4294967296;
parameter    ap_ST_fsm_state34 = 59'd8589934592;
parameter    ap_ST_fsm_state35 = 59'd17179869184;
parameter    ap_ST_fsm_state36 = 59'd34359738368;
parameter    ap_ST_fsm_state37 = 59'd68719476736;
parameter    ap_ST_fsm_state38 = 59'd137438953472;
parameter    ap_ST_fsm_state39 = 59'd274877906944;
parameter    ap_ST_fsm_state40 = 59'd549755813888;
parameter    ap_ST_fsm_state41 = 59'd1099511627776;
parameter    ap_ST_fsm_state42 = 59'd2199023255552;
parameter    ap_ST_fsm_state43 = 59'd4398046511104;
parameter    ap_ST_fsm_state44 = 59'd8796093022208;
parameter    ap_ST_fsm_state45 = 59'd17592186044416;
parameter    ap_ST_fsm_state46 = 59'd35184372088832;
parameter    ap_ST_fsm_state47 = 59'd70368744177664;
parameter    ap_ST_fsm_state48 = 59'd140737488355328;
parameter    ap_ST_fsm_state49 = 59'd281474976710656;
parameter    ap_ST_fsm_state50 = 59'd562949953421312;
parameter    ap_ST_fsm_state51 = 59'd1125899906842624;
parameter    ap_ST_fsm_state52 = 59'd2251799813685248;
parameter    ap_ST_fsm_state53 = 59'd4503599627370496;
parameter    ap_ST_fsm_state54 = 59'd9007199254740992;
parameter    ap_ST_fsm_state55 = 59'd18014398509481984;
parameter    ap_ST_fsm_state56 = 59'd36028797018963968;
parameter    ap_ST_fsm_state57 = 59'd72057594037927936;
parameter    ap_ST_fsm_state58 = 59'd144115188075855872;
parameter    ap_ST_fsm_state59 = 59'd288230376151711744;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [15:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [15:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_V_V_write;
reg in_V_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [58:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] fc3_layer_weights_V_address0;
reg    fc3_layer_weights_V_ce0;
wire   [10:0] fc3_layer_weights_V_q0;
wire   [3:0] fc3_layer_bias_V_address0;
reg    fc3_layer_bias_V_ce0;
wire   [7:0] fc3_layer_bias_V_q0;
reg    out_V_V_blk_n;
wire    ap_CS_fsm_state59;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond7_fu_348_p2;
wire   [31:0] grp_fu_337_p2;
reg   [31:0] reg_342;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state39;
wire   [6:0] j_3_fu_354_p2;
reg   [6:0] j_3_reg_1387;
reg    ap_block_state2;
wire   [10:0] tmp_2_fu_384_p2;
reg   [10:0] tmp_2_reg_1392;
wire  signed [26:0] tmp_s_fu_390_p1;
reg  signed [26:0] tmp_s_reg_1397;
wire   [3:0] i_3_fu_400_p2;
reg   [3:0] i_3_reg_1405;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond9_fu_394_p2;
reg  signed [10:0] fc3_layer_weights_V_1_reg_1415;
wire    ap_CS_fsm_state4;
reg   [3:0] output_V_addr_2_reg_1420;
wire   [3:0] i_4_fu_452_p2;
reg   [3:0] i_4_reg_1428;
wire    ap_CS_fsm_state6;
reg   [3:0] output_V_addr_1_reg_1433;
wire   [0:0] exitcond8_fu_446_p2;
wire   [15:0] tmp_V_13_fu_468_p2;
reg   [15:0] tmp_V_13_reg_1443;
wire    ap_CS_fsm_state7;
reg   [0:0] p_Result_14_reg_1450;
wire   [0:0] tmp_25_fu_483_p2;
reg   [0:0] tmp_25_reg_1456;
wire    ap_CS_fsm_state8;
wire   [15:0] tmp_V_14_fu_493_p3;
reg   [15:0] tmp_V_14_reg_1461;
reg   [31:0] l_fu_517_p3;
reg   [31:0] l_reg_1469;
wire   [7:0] tmp_79_fu_525_p1;
reg   [7:0] tmp_79_reg_1474;
wire   [31:0] tmp_28_fu_529_p2;
reg   [31:0] tmp_28_reg_1479;
wire    ap_CS_fsm_state9;
wire   [31:0] tmp_41_fu_636_p3;
reg   [31:0] tmp_41_reg_1485;
wire   [0:0] tmp_42_fu_644_p2;
reg   [0:0] tmp_42_reg_1490;
reg   [62:0] m_s_reg_1495;
wire    ap_CS_fsm_state10;
reg   [0:0] tmp_68_reg_1500;
wire   [31:0] x_assign_fu_768_p3;
reg   [31:0] x_assign_reg_1505;
wire    ap_CS_fsm_state11;
wire   [31:0] grp_fu_324_p2;
wire    ap_CS_fsm_state25;
wire   [3:0] i_5_fu_781_p2;
reg   [3:0] i_5_reg_1518;
wire    ap_CS_fsm_state26;
wire   [0:0] exitcond_fu_775_p2;
wire   [0:0] tmp_30_fu_792_p2;
reg   [0:0] tmp_30_reg_1528;
wire    ap_CS_fsm_state27;
wire   [0:0] p_Result_17_fu_798_p3;
reg   [0:0] p_Result_17_reg_1533;
wire   [15:0] tmp_V_16_fu_812_p3;
reg   [15:0] tmp_V_16_reg_1538;
reg   [31:0] l_3_fu_838_p3;
reg   [31:0] l_3_reg_1546;
wire   [7:0] tmp_96_fu_846_p1;
reg   [7:0] tmp_96_reg_1551;
wire   [31:0] tmp_33_fu_850_p2;
reg   [31:0] tmp_33_reg_1556;
wire    ap_CS_fsm_state28;
wire   [31:0] tmp_56_fu_957_p3;
reg   [31:0] tmp_56_reg_1562;
wire   [0:0] tmp_58_fu_965_p2;
reg   [0:0] tmp_58_reg_1567;
reg   [62:0] m_1_reg_1572;
wire    ap_CS_fsm_state29;
reg   [0:0] tmp_95_reg_1577;
wire   [31:0] x_assign_1_fu_1089_p3;
reg   [31:0] x_assign_1_reg_1582;
wire    ap_CS_fsm_state30;
wire   [31:0] grp_fu_329_p2;
reg   [31:0] v_assign_reg_1587;
wire    ap_CS_fsm_state55;
reg   [0:0] p_Result_20_reg_1593;
wire    ap_CS_fsm_state56;
reg   [10:0] exp_tmp_V_reg_1598;
wire   [51:0] tmp_100_fu_1122_p1;
reg   [51:0] tmp_100_reg_1603;
wire   [0:0] tmp_72_fu_1126_p2;
reg   [0:0] tmp_72_reg_1608;
wire   [53:0] man_V_2_fu_1152_p3;
reg   [53:0] man_V_2_reg_1614;
wire    ap_CS_fsm_state57;
wire  signed [11:0] sh_amt_fu_1183_p3;
reg  signed [11:0] sh_amt_reg_1619;
wire   [15:0] tmp_101_fu_1197_p1;
reg   [15:0] tmp_101_reg_1625;
wire   [0:0] sel_tmp4_fu_1300_p2;
reg   [0:0] sel_tmp4_reg_1630;
wire   [0:0] or_cond_fu_1306_p2;
reg   [0:0] or_cond_reg_1635;
wire   [15:0] newSel1_fu_1312_p3;
reg   [15:0] newSel1_reg_1640;
wire   [0:0] or_cond2_fu_1326_p2;
reg   [0:0] or_cond2_reg_1645;
wire   [15:0] tmp_V_11_fu_1369_p3;
reg   [15:0] tmp_V_11_reg_1650;
wire    ap_CS_fsm_state58;
reg   [3:0] output_V_address0;
reg    output_V_ce0;
reg    output_V_we0;
reg   [15:0] output_V_d0;
wire   [15:0] output_V_q0;
reg   [6:0] j_reg_267;
reg    ap_block_state1;
reg   [3:0] i_reg_278;
wire    ap_CS_fsm_state5;
reg   [31:0] soft_max_value_reg_290;
reg   [3:0] i1_reg_302;
reg   [3:0] i2_reg_313;
wire   [63:0] tmp_4_cast_fu_415_p1;
wire   [63:0] tmp_27_fu_420_p1;
wire   [63:0] tmp_24_fu_458_p1;
wire   [63:0] tmp_26_fu_787_p1;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state40;
reg   [31:0] grp_fu_337_p1;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state31;
wire   [9:0] tmp_fu_360_p3;
wire   [7:0] tmp_1_fu_372_p3;
wire   [10:0] p_shl1_cast_fu_380_p1;
wire   [10:0] p_shl_cast_fu_368_p1;
wire   [10:0] tmp_27_cast_fu_406_p1;
wire   [10:0] tmp_4_fu_410_p2;
wire  signed [26:0] grp_fu_1376_p3;
wire  signed [15:0] p_Val2_1_cast_fu_464_p1;
wire   [15:0] tmp_V_fu_488_p2;
reg   [15:0] p_Result_s_fu_499_p4;
wire   [31:0] p_Result_15_fu_509_p3;
wire   [31:0] lsb_index_fu_538_p2;
wire   [30:0] tmp_34_fu_544_p4;
wire   [4:0] tmp_36_fu_560_p1;
wire   [4:0] tmp_37_fu_564_p2;
wire   [15:0] tmp_38_fu_570_p1;
wire   [15:0] tmp_46_fu_574_p2;
wire   [15:0] p_Result_4_fu_580_p2;
wire   [0:0] icmp_fu_554_p2;
wire   [0:0] tmp_31_fu_585_p2;
wire   [0:0] tmp_54_fu_597_p3;
wire   [15:0] tmp_32_fu_534_p1;
wire   [15:0] tmp_35_fu_611_p2;
wire   [0:0] p_Result_5_fu_617_p3;
wire   [0:0] rev_fu_605_p2;
wire   [0:0] tmp_39_fu_624_p2;
wire   [0:0] a_fu_591_p2;
wire   [0:0] tmp_40_fu_630_p2;
wire   [31:0] m_cast_fu_653_p1;
wire   [31:0] tmp_43_fu_656_p2;
wire   [31:0] tmp_44_fu_661_p2;
wire   [31:0] tmp_48_fu_671_p2;
wire   [63:0] m_fu_650_p1;
wire   [63:0] tmp_49_fu_676_p1;
wire   [63:0] tmp_50_cast_fu_667_p1;
wire   [63:0] tmp_50_fu_680_p2;
wire   [63:0] tmp_51_fu_693_p1;
wire   [63:0] m_4_fu_686_p3;
wire   [63:0] m_5_fu_696_p2;
wire   [7:0] tmp_52_fu_730_p2;
wire   [7:0] tmp_100_cast_cast_ca_fu_723_p3;
wire   [7:0] p_Repl2_3_trunc_fu_735_p2;
wire   [63:0] m_11_fu_720_p1;
wire   [8:0] tmp_53_fu_741_p3;
wire   [63:0] p_Result_16_fu_748_p5;
wire   [31:0] tmp_81_fu_760_p1;
wire   [31:0] tmp_57_fu_764_p1;
wire   [15:0] tmp_V_2_fu_806_p2;
reg   [15:0] p_Result_3_fu_820_p4;
wire   [31:0] p_Result_18_fu_830_p3;
wire   [31:0] lsb_index_1_fu_859_p2;
wire   [30:0] tmp_88_fu_865_p4;
wire   [4:0] tmp_89_fu_881_p1;
wire   [4:0] tmp_90_fu_885_p2;
wire   [15:0] tmp_91_fu_891_p1;
wire   [15:0] tmp_92_fu_895_p2;
wire   [15:0] p_Result_10_fu_901_p2;
wire   [0:0] icmp1_fu_875_p2;
wire   [0:0] tmp_45_fu_906_p2;
wire   [0:0] tmp_94_fu_918_p3;
wire   [15:0] tmp_85_fu_855_p1;
wire   [15:0] tmp_47_fu_932_p2;
wire   [0:0] p_Result_7_fu_938_p3;
wire   [0:0] rev1_fu_926_p2;
wire   [0:0] tmp_55_fu_945_p2;
wire   [0:0] a_1_fu_912_p2;
wire   [0:0] tmp_60_fu_951_p2;
wire   [31:0] m_3_cast_fu_974_p1;
wire   [31:0] tmp_59_fu_977_p2;
wire   [31:0] tmp_61_fu_982_p2;
wire   [31:0] tmp_62_fu_992_p2;
wire   [63:0] m_3_fu_971_p1;
wire   [63:0] tmp_63_fu_997_p1;
wire   [63:0] tmp_65_cast_fu_988_p1;
wire   [63:0] tmp_64_fu_1001_p2;
wire   [63:0] tmp_65_fu_1014_p1;
wire   [63:0] m_7_fu_1007_p3;
wire   [63:0] m_8_fu_1017_p2;
wire   [7:0] tmp_66_fu_1051_p2;
wire   [7:0] tmp_104_cast_cast_ca_fu_1044_p3;
wire   [7:0] p_Repl2_5_trunc_fu_1056_p2;
wire   [63:0] m_12_fu_1041_p1;
wire   [8:0] tmp_67_fu_1062_p3;
wire   [63:0] p_Result_19_fu_1069_p5;
wire   [31:0] tmp_97_fu_1081_p1;
wire   [31:0] tmp_69_fu_1085_p1;
wire   [63:0] d_assign_fu_334_p1;
wire   [63:0] ireg_V_fu_1096_p1;
wire   [62:0] tmp_98_fu_1100_p1;
wire   [52:0] tmp_71_fu_1135_p3;
wire   [53:0] p_Result_21_fu_1142_p1;
wire   [53:0] man_V_1_fu_1146_p2;
wire   [11:0] tmp_70_fu_1132_p1;
wire   [11:0] F2_fu_1159_p2;
wire   [0:0] tmp_73_fu_1165_p2;
wire   [11:0] tmp_74_fu_1171_p2;
wire   [11:0] tmp_75_fu_1177_p2;
wire   [7:0] tmp_102_fu_1207_p4;
wire   [31:0] ireg_V_to_int_fu_1223_p1;
wire   [0:0] tmp_104_fu_1226_p3;
wire   [0:0] tmp_76_fu_1191_p2;
wire   [0:0] sel_tmp1_fu_1242_p2;
wire   [0:0] sel_tmp6_demorgan_fu_1253_p2;
wire   [0:0] sel_tmp6_fu_1258_p2;
wire   [0:0] tmp_77_fu_1201_p2;
wire   [0:0] sel_tmp7_fu_1264_p2;
wire   [0:0] sel_tmp8_fu_1270_p2;
wire   [0:0] sel_tmp21_demorgan_fu_1288_p2;
wire   [0:0] icmp2_fu_1217_p2;
wire   [0:0] sel_tmp3_fu_1294_p2;
wire   [0:0] sel_tmp_fu_1282_p2;
wire   [0:0] sel_tmp9_fu_1276_p2;
wire   [15:0] tmp_82_fu_1234_p3;
wire   [0:0] sel_tmp2_fu_1247_p2;
wire   [0:0] or_cond1_fu_1320_p2;
wire  signed [31:0] sh_amt_cast_fu_1335_p1;
wire   [53:0] tmp_78_fu_1338_p1;
wire   [53:0] tmp_80_fu_1342_p2;
wire  signed [15:0] sh_amt_cast2_fu_1332_p1;
wire   [15:0] tmp_83_fu_1351_p2;
wire   [15:0] tmp_103_fu_1347_p1;
wire   [15:0] newSel_fu_1356_p3;
wire   [15:0] newSel2_fu_1363_p3;
wire  signed [15:0] grp_fu_1376_p0;
wire   [26:0] grp_fu_1376_p2;
reg   [58:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 59'd1;
end

fc3_fc3_layer_weights_V #(
    .DataWidth( 11 ),
    .AddressRange( 840 ),
    .AddressWidth( 10 ))
fc3_layer_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc3_layer_weights_V_address0),
    .ce0(fc3_layer_weights_V_ce0),
    .q0(fc3_layer_weights_V_q0)
);

fc3_fc3_layer_bias_V #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
fc3_layer_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc3_layer_bias_V_address0),
    .ce0(fc3_layer_bias_V_ce0),
    .q0(fc3_layer_bias_V_q0)
);

fc3_output_V #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
output_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_V_address0),
    .ce0(output_V_ce0),
    .we0(output_V_we0),
    .d0(output_V_d0),
    .q0(output_V_q0)
);

lenet_hls_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lenet_hls_fadd_32ns_32ns_32_5_full_dsp_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_342),
    .din1(soft_max_value_reg_290),
    .ce(1'b1),
    .dout(grp_fu_324_p2)
);

lenet_hls_fdiv_32ns_32ns_32_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lenet_hls_fdiv_32ns_32ns_32_16_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_342),
    .din1(soft_max_value_reg_290),
    .ce(1'b1),
    .dout(grp_fu_329_p2)
);

lenet_hls_fpext_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
lenet_hls_fpext_32ns_64_1_1_U49(
    .din0(v_assign_reg_1587),
    .dout(d_assign_fu_334_p1)
);

lenet_hls_fexp_32ns_32ns_32_9_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lenet_hls_fexp_32ns_32ns_32_9_full_dsp_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(grp_fu_337_p1),
    .ce(1'b1),
    .dout(grp_fu_337_p2)
);

lenet_hls_mac_muladd_16s_11s_27ns_27_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 27 ),
    .dout_WIDTH( 27 ))
lenet_hls_mac_muladd_16s_11s_27ns_27_1_1_U51(
    .din0(grp_fu_1376_p0),
    .din1(fc3_layer_weights_V_1_reg_1415),
    .din2(grp_fu_1376_p2),
    .dout(grp_fu_1376_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond_fu_775_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_V_V_empty_n == 1'b0) & (exitcond7_fu_348_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond7_fu_348_p2 == 1'd1))) begin
        i1_reg_302 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        i1_reg_302 <= i_4_reg_1428;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond8_fu_446_p2 == 1'd1))) begin
        i2_reg_313 <= 4'd0;
    end else if (((out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
        i2_reg_313 <= i_5_reg_1518;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_reg_278 <= i_3_reg_1405;
    end else if ((~((in_V_V_empty_n == 1'b0) & (exitcond7_fu_348_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond7_fu_348_p2 == 1'd0))) begin
        i_reg_278 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_267 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (exitcond9_fu_394_p2 == 1'd1))) begin
        j_reg_267 <= j_3_reg_1387;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_V_V_empty_n == 1'b0) & (exitcond7_fu_348_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond7_fu_348_p2 == 1'd1))) begin
        soft_max_value_reg_290 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        soft_max_value_reg_290 <= grp_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        exp_tmp_V_reg_1598 <= {{ireg_V_fu_1096_p1[62:52]}};
        p_Result_20_reg_1593 <= ireg_V_fu_1096_p1[32'd63];
        tmp_100_reg_1603 <= tmp_100_fu_1122_p1;
        tmp_72_reg_1608 <= tmp_72_fu_1126_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        fc3_layer_weights_V_1_reg_1415 <= fc3_layer_weights_V_q0;
        output_V_addr_2_reg_1420 <= tmp_27_fu_420_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_3_reg_1405 <= i_3_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_4_reg_1428 <= i_4_fu_452_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_5_reg_1518 <= i_5_fu_781_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_V_V_empty_n == 1'b0) & (exitcond7_fu_348_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2))) begin
        j_3_reg_1387 <= j_3_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        l_3_reg_1546 <= l_3_fu_838_p3;
        p_Result_17_reg_1533 <= output_V_q0[32'd15];
        tmp_30_reg_1528 <= tmp_30_fu_792_p2;
        tmp_96_reg_1551 <= tmp_96_fu_846_p1;
        tmp_V_16_reg_1538 <= tmp_V_16_fu_812_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        l_reg_1469 <= l_fu_517_p3;
        tmp_25_reg_1456 <= tmp_25_fu_483_p2;
        tmp_79_reg_1474 <= tmp_79_fu_525_p1;
        tmp_V_14_reg_1461 <= tmp_V_14_fu_493_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (tmp_30_reg_1528 == 1'd0))) begin
        m_1_reg_1572 <= {{m_8_fu_1017_p2[63:1]}};
        tmp_95_reg_1577 <= m_8_fu_1017_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_25_reg_1456 == 1'd0))) begin
        m_s_reg_1495 <= {{m_5_fu_696_p2[63:1]}};
        tmp_68_reg_1500 <= m_5_fu_696_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        man_V_2_reg_1614 <= man_V_2_fu_1152_p3;
        newSel1_reg_1640 <= newSel1_fu_1312_p3;
        or_cond2_reg_1645 <= or_cond2_fu_1326_p2;
        or_cond_reg_1635 <= or_cond_fu_1306_p2;
        sel_tmp4_reg_1630 <= sel_tmp4_fu_1300_p2;
        sh_amt_reg_1619 <= sh_amt_fu_1183_p3;
        tmp_101_reg_1625 <= tmp_101_fu_1197_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond8_fu_446_p2 == 1'd0))) begin
        output_V_addr_1_reg_1433 <= tmp_24_fu_458_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Result_14_reg_1450 <= tmp_V_13_fu_468_p2[32'd15];
        tmp_V_13_reg_1443 <= tmp_V_13_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_342 <= grp_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_25_reg_1456 == 1'd0))) begin
        tmp_28_reg_1479 <= tmp_28_fu_529_p2;
        tmp_41_reg_1485[0] <= tmp_41_fu_636_p3[0];
        tmp_42_reg_1490 <= tmp_42_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_V_V_empty_n == 1'b0) & (exitcond7_fu_348_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond7_fu_348_p2 == 1'd0))) begin
        tmp_2_reg_1392[10 : 1] <= tmp_2_fu_384_p2[10 : 1];
        tmp_s_reg_1397 <= tmp_s_fu_390_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (tmp_30_reg_1528 == 1'd0))) begin
        tmp_33_reg_1556 <= tmp_33_fu_850_p2;
        tmp_56_reg_1562[0] <= tmp_56_fu_957_p3[0];
        tmp_58_reg_1567 <= tmp_58_fu_965_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        tmp_V_11_reg_1650 <= tmp_V_11_fu_1369_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        v_assign_reg_1587 <= grp_fu_329_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        x_assign_1_reg_1582 <= x_assign_1_fu_1089_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x_assign_reg_1505 <= x_assign_fu_768_p3;
    end
end

always @ (*) begin
    if (((exitcond_fu_775_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_775_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        fc3_layer_bias_V_ce0 = 1'b1;
    end else begin
        fc3_layer_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fc3_layer_weights_V_ce0 = 1'b1;
    end else begin
        fc3_layer_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_337_p1 = x_assign_1_reg_1582;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_337_p1 = x_assign_reg_1505;
    end else begin
        grp_fu_337_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond7_fu_348_p2 == 1'd0))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((in_V_V_empty_n == 1'b0) & (exitcond7_fu_348_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond7_fu_348_p2 == 1'd0))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        output_V_address0 = tmp_26_fu_787_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        output_V_address0 = output_V_addr_1_reg_1433;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_V_address0 = tmp_24_fu_458_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_V_address0 = output_V_addr_2_reg_1420;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_V_address0 = tmp_27_fu_420_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        output_V_address0 = 64'd0;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        output_V_d0 = tmp_V_13_fu_468_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        output_V_d0 = {{grp_fu_1376_p3[26:11]}};
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        output_V_d0 = 16'd0;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((in_V_V_empty_n == 1'b0) & (exitcond7_fu_348_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond7_fu_348_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if ((~((in_V_V_empty_n == 1'b0) & (exitcond7_fu_348_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (exitcond7_fu_348_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond9_fu_394_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond8_fu_446_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state26 : begin
            if (((exitcond_fu_775_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_1159_p2 = (12'd1075 - tmp_70_fu_1132_p1);

assign a_1_fu_912_p2 = (tmp_45_fu_906_p2 & icmp1_fu_875_p2);

assign a_fu_591_p2 = (tmp_31_fu_585_p2 & icmp_fu_554_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state2 = ((in_V_V_empty_n == 1'b0) & (exitcond7_fu_348_p2 == 1'd0));
end

assign exitcond7_fu_348_p2 = ((j_reg_267 == 7'd84) ? 1'b1 : 1'b0);

assign exitcond8_fu_446_p2 = ((i1_reg_302 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond9_fu_394_p2 = ((i_reg_278 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_fu_775_p2 = ((i2_reg_313 == 4'd10) ? 1'b1 : 1'b0);

assign fc3_layer_bias_V_address0 = tmp_24_fu_458_p1;

assign fc3_layer_weights_V_address0 = tmp_4_cast_fu_415_p1;

assign grp_fu_1376_p0 = tmp_s_reg_1397;

assign grp_fu_1376_p2 = {{output_V_q0}, {11'd0}};

assign i_3_fu_400_p2 = (i_reg_278 + 4'd1);

assign i_4_fu_452_p2 = (i1_reg_302 + 4'd1);

assign i_5_fu_781_p2 = (i2_reg_313 + 4'd1);

assign icmp1_fu_875_p2 = (($signed(tmp_88_fu_865_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp2_fu_1217_p2 = ((tmp_102_fu_1207_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_fu_554_p2 = (($signed(tmp_34_fu_544_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign ireg_V_fu_1096_p1 = d_assign_fu_334_p1;

assign ireg_V_to_int_fu_1223_p1 = v_assign_reg_1587;

assign j_3_fu_354_p2 = (j_reg_267 + 7'd1);


always @ (p_Result_18_fu_830_p3) begin
    if (p_Result_18_fu_830_p3[0] == 1'b1) begin
        l_3_fu_838_p3 = 32'd0;
    end else if (p_Result_18_fu_830_p3[1] == 1'b1) begin
        l_3_fu_838_p3 = 32'd1;
    end else if (p_Result_18_fu_830_p3[2] == 1'b1) begin
        l_3_fu_838_p3 = 32'd2;
    end else if (p_Result_18_fu_830_p3[3] == 1'b1) begin
        l_3_fu_838_p3 = 32'd3;
    end else if (p_Result_18_fu_830_p3[4] == 1'b1) begin
        l_3_fu_838_p3 = 32'd4;
    end else if (p_Result_18_fu_830_p3[5] == 1'b1) begin
        l_3_fu_838_p3 = 32'd5;
    end else if (p_Result_18_fu_830_p3[6] == 1'b1) begin
        l_3_fu_838_p3 = 32'd6;
    end else if (p_Result_18_fu_830_p3[7] == 1'b1) begin
        l_3_fu_838_p3 = 32'd7;
    end else if (p_Result_18_fu_830_p3[8] == 1'b1) begin
        l_3_fu_838_p3 = 32'd8;
    end else if (p_Result_18_fu_830_p3[9] == 1'b1) begin
        l_3_fu_838_p3 = 32'd9;
    end else if (p_Result_18_fu_830_p3[10] == 1'b1) begin
        l_3_fu_838_p3 = 32'd10;
    end else if (p_Result_18_fu_830_p3[11] == 1'b1) begin
        l_3_fu_838_p3 = 32'd11;
    end else if (p_Result_18_fu_830_p3[12] == 1'b1) begin
        l_3_fu_838_p3 = 32'd12;
    end else if (p_Result_18_fu_830_p3[13] == 1'b1) begin
        l_3_fu_838_p3 = 32'd13;
    end else if (p_Result_18_fu_830_p3[14] == 1'b1) begin
        l_3_fu_838_p3 = 32'd14;
    end else if (p_Result_18_fu_830_p3[15] == 1'b1) begin
        l_3_fu_838_p3 = 32'd15;
    end else if (p_Result_18_fu_830_p3[16] == 1'b1) begin
        l_3_fu_838_p3 = 32'd16;
    end else if (p_Result_18_fu_830_p3[17] == 1'b1) begin
        l_3_fu_838_p3 = 32'd17;
    end else if (p_Result_18_fu_830_p3[18] == 1'b1) begin
        l_3_fu_838_p3 = 32'd18;
    end else if (p_Result_18_fu_830_p3[19] == 1'b1) begin
        l_3_fu_838_p3 = 32'd19;
    end else if (p_Result_18_fu_830_p3[20] == 1'b1) begin
        l_3_fu_838_p3 = 32'd20;
    end else if (p_Result_18_fu_830_p3[21] == 1'b1) begin
        l_3_fu_838_p3 = 32'd21;
    end else if (p_Result_18_fu_830_p3[22] == 1'b1) begin
        l_3_fu_838_p3 = 32'd22;
    end else if (p_Result_18_fu_830_p3[23] == 1'b1) begin
        l_3_fu_838_p3 = 32'd23;
    end else if (p_Result_18_fu_830_p3[24] == 1'b1) begin
        l_3_fu_838_p3 = 32'd24;
    end else if (p_Result_18_fu_830_p3[25] == 1'b1) begin
        l_3_fu_838_p3 = 32'd25;
    end else if (p_Result_18_fu_830_p3[26] == 1'b1) begin
        l_3_fu_838_p3 = 32'd26;
    end else if (p_Result_18_fu_830_p3[27] == 1'b1) begin
        l_3_fu_838_p3 = 32'd27;
    end else if (p_Result_18_fu_830_p3[28] == 1'b1) begin
        l_3_fu_838_p3 = 32'd28;
    end else if (p_Result_18_fu_830_p3[29] == 1'b1) begin
        l_3_fu_838_p3 = 32'd29;
    end else if (p_Result_18_fu_830_p3[30] == 1'b1) begin
        l_3_fu_838_p3 = 32'd30;
    end else if (p_Result_18_fu_830_p3[31] == 1'b1) begin
        l_3_fu_838_p3 = 32'd31;
    end else begin
        l_3_fu_838_p3 = 32'd32;
    end
end


always @ (p_Result_15_fu_509_p3) begin
    if (p_Result_15_fu_509_p3[0] == 1'b1) begin
        l_fu_517_p3 = 32'd0;
    end else if (p_Result_15_fu_509_p3[1] == 1'b1) begin
        l_fu_517_p3 = 32'd1;
    end else if (p_Result_15_fu_509_p3[2] == 1'b1) begin
        l_fu_517_p3 = 32'd2;
    end else if (p_Result_15_fu_509_p3[3] == 1'b1) begin
        l_fu_517_p3 = 32'd3;
    end else if (p_Result_15_fu_509_p3[4] == 1'b1) begin
        l_fu_517_p3 = 32'd4;
    end else if (p_Result_15_fu_509_p3[5] == 1'b1) begin
        l_fu_517_p3 = 32'd5;
    end else if (p_Result_15_fu_509_p3[6] == 1'b1) begin
        l_fu_517_p3 = 32'd6;
    end else if (p_Result_15_fu_509_p3[7] == 1'b1) begin
        l_fu_517_p3 = 32'd7;
    end else if (p_Result_15_fu_509_p3[8] == 1'b1) begin
        l_fu_517_p3 = 32'd8;
    end else if (p_Result_15_fu_509_p3[9] == 1'b1) begin
        l_fu_517_p3 = 32'd9;
    end else if (p_Result_15_fu_509_p3[10] == 1'b1) begin
        l_fu_517_p3 = 32'd10;
    end else if (p_Result_15_fu_509_p3[11] == 1'b1) begin
        l_fu_517_p3 = 32'd11;
    end else if (p_Result_15_fu_509_p3[12] == 1'b1) begin
        l_fu_517_p3 = 32'd12;
    end else if (p_Result_15_fu_509_p3[13] == 1'b1) begin
        l_fu_517_p3 = 32'd13;
    end else if (p_Result_15_fu_509_p3[14] == 1'b1) begin
        l_fu_517_p3 = 32'd14;
    end else if (p_Result_15_fu_509_p3[15] == 1'b1) begin
        l_fu_517_p3 = 32'd15;
    end else if (p_Result_15_fu_509_p3[16] == 1'b1) begin
        l_fu_517_p3 = 32'd16;
    end else if (p_Result_15_fu_509_p3[17] == 1'b1) begin
        l_fu_517_p3 = 32'd17;
    end else if (p_Result_15_fu_509_p3[18] == 1'b1) begin
        l_fu_517_p3 = 32'd18;
    end else if (p_Result_15_fu_509_p3[19] == 1'b1) begin
        l_fu_517_p3 = 32'd19;
    end else if (p_Result_15_fu_509_p3[20] == 1'b1) begin
        l_fu_517_p3 = 32'd20;
    end else if (p_Result_15_fu_509_p3[21] == 1'b1) begin
        l_fu_517_p3 = 32'd21;
    end else if (p_Result_15_fu_509_p3[22] == 1'b1) begin
        l_fu_517_p3 = 32'd22;
    end else if (p_Result_15_fu_509_p3[23] == 1'b1) begin
        l_fu_517_p3 = 32'd23;
    end else if (p_Result_15_fu_509_p3[24] == 1'b1) begin
        l_fu_517_p3 = 32'd24;
    end else if (p_Result_15_fu_509_p3[25] == 1'b1) begin
        l_fu_517_p3 = 32'd25;
    end else if (p_Result_15_fu_509_p3[26] == 1'b1) begin
        l_fu_517_p3 = 32'd26;
    end else if (p_Result_15_fu_509_p3[27] == 1'b1) begin
        l_fu_517_p3 = 32'd27;
    end else if (p_Result_15_fu_509_p3[28] == 1'b1) begin
        l_fu_517_p3 = 32'd28;
    end else if (p_Result_15_fu_509_p3[29] == 1'b1) begin
        l_fu_517_p3 = 32'd29;
    end else if (p_Result_15_fu_509_p3[30] == 1'b1) begin
        l_fu_517_p3 = 32'd30;
    end else if (p_Result_15_fu_509_p3[31] == 1'b1) begin
        l_fu_517_p3 = 32'd31;
    end else begin
        l_fu_517_p3 = 32'd32;
    end
end

assign lsb_index_1_fu_859_p2 = ($signed(32'd4294967272) + $signed(tmp_33_fu_850_p2));

assign lsb_index_fu_538_p2 = ($signed(32'd4294967272) + $signed(tmp_28_fu_529_p2));

assign m_11_fu_720_p1 = m_s_reg_1495;

assign m_12_fu_1041_p1 = m_1_reg_1572;

assign m_3_cast_fu_974_p1 = tmp_V_16_reg_1538;

assign m_3_fu_971_p1 = tmp_V_16_reg_1538;

assign m_4_fu_686_p3 = ((tmp_42_reg_1490[0:0] === 1'b1) ? tmp_50_cast_fu_667_p1 : tmp_50_fu_680_p2);

assign m_5_fu_696_p2 = (tmp_51_fu_693_p1 + m_4_fu_686_p3);

assign m_7_fu_1007_p3 = ((tmp_58_reg_1567[0:0] === 1'b1) ? tmp_65_cast_fu_988_p1 : tmp_64_fu_1001_p2);

assign m_8_fu_1017_p2 = (tmp_65_fu_1014_p1 + m_7_fu_1007_p3);

assign m_cast_fu_653_p1 = tmp_V_14_reg_1461;

assign m_fu_650_p1 = tmp_V_14_reg_1461;

assign man_V_1_fu_1146_p2 = (54'd0 - p_Result_21_fu_1142_p1);

assign man_V_2_fu_1152_p3 = ((p_Result_20_reg_1593[0:0] === 1'b1) ? man_V_1_fu_1146_p2 : p_Result_21_fu_1142_p1);

assign newSel1_fu_1312_p3 = ((sel_tmp9_fu_1276_p2[0:0] === 1'b1) ? tmp_82_fu_1234_p3 : tmp_101_fu_1197_p1);

assign newSel2_fu_1363_p3 = ((or_cond_reg_1635[0:0] === 1'b1) ? newSel_fu_1356_p3 : newSel1_reg_1640);

assign newSel_fu_1356_p3 = ((sel_tmp4_reg_1630[0:0] === 1'b1) ? tmp_83_fu_1351_p2 : tmp_103_fu_1347_p1);

assign or_cond1_fu_1320_p2 = (sel_tmp9_fu_1276_p2 | sel_tmp2_fu_1247_p2);

assign or_cond2_fu_1326_p2 = (or_cond_fu_1306_p2 | or_cond1_fu_1320_p2);

assign or_cond_fu_1306_p2 = (sel_tmp_fu_1282_p2 | sel_tmp4_fu_1300_p2);

assign out_V_V_din = tmp_V_11_reg_1650;

assign p_Repl2_3_trunc_fu_735_p2 = (tmp_52_fu_730_p2 + tmp_100_cast_cast_ca_fu_723_p3);

assign p_Repl2_5_trunc_fu_1056_p2 = (tmp_66_fu_1051_p2 + tmp_104_cast_cast_ca_fu_1044_p3);

assign p_Result_10_fu_901_p2 = (tmp_V_16_reg_1538 & tmp_92_fu_895_p2);

assign p_Result_15_fu_509_p3 = {{16'd65535}, {p_Result_s_fu_499_p4}};

assign p_Result_16_fu_748_p5 = {{m_11_fu_720_p1[63:32]}, {tmp_53_fu_741_p3}, {m_11_fu_720_p1[22:0]}};

assign p_Result_17_fu_798_p3 = output_V_q0[32'd15];

assign p_Result_18_fu_830_p3 = {{16'd65535}, {p_Result_3_fu_820_p4}};

assign p_Result_19_fu_1069_p5 = {{m_12_fu_1041_p1[63:32]}, {tmp_67_fu_1062_p3}, {m_12_fu_1041_p1[22:0]}};

assign p_Result_21_fu_1142_p1 = tmp_71_fu_1135_p3;

integer ap_tvar_int_0;

always @ (tmp_V_16_fu_812_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            p_Result_3_fu_820_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_3_fu_820_p4[ap_tvar_int_0] = tmp_V_16_fu_812_p3[15 - ap_tvar_int_0];
        end
    end
end

assign p_Result_4_fu_580_p2 = (tmp_V_14_reg_1461 & tmp_46_fu_574_p2);

assign p_Result_5_fu_617_p3 = tmp_V_14_reg_1461[tmp_35_fu_611_p2];

assign p_Result_7_fu_938_p3 = tmp_V_16_reg_1538[tmp_47_fu_932_p2];

integer ap_tvar_int_1;

always @ (tmp_V_14_fu_493_p3) begin
    for (ap_tvar_int_1 = 16 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 15 - 0) begin
            p_Result_s_fu_499_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_s_fu_499_p4[ap_tvar_int_1] = tmp_V_14_fu_493_p3[15 - ap_tvar_int_1];
        end
    end
end

assign p_Val2_1_cast_fu_464_p1 = $signed(fc3_layer_bias_V_q0);

assign p_shl1_cast_fu_380_p1 = tmp_1_fu_372_p3;

assign p_shl_cast_fu_368_p1 = tmp_fu_360_p3;

assign rev1_fu_926_p2 = (tmp_94_fu_918_p3 ^ 1'd1);

assign rev_fu_605_p2 = (tmp_54_fu_597_p3 ^ 1'd1);

assign sel_tmp1_fu_1242_p2 = (tmp_72_reg_1608 ^ 1'd1);

assign sel_tmp21_demorgan_fu_1288_p2 = (tmp_73_fu_1165_p2 | sel_tmp6_demorgan_fu_1253_p2);

assign sel_tmp2_fu_1247_p2 = (tmp_76_fu_1191_p2 & sel_tmp1_fu_1242_p2);

assign sel_tmp3_fu_1294_p2 = (sel_tmp21_demorgan_fu_1288_p2 ^ 1'd1);

assign sel_tmp4_fu_1300_p2 = (sel_tmp3_fu_1294_p2 & icmp2_fu_1217_p2);

assign sel_tmp6_demorgan_fu_1253_p2 = (tmp_76_fu_1191_p2 | tmp_72_reg_1608);

assign sel_tmp6_fu_1258_p2 = (sel_tmp6_demorgan_fu_1253_p2 ^ 1'd1);

assign sel_tmp7_fu_1264_p2 = (tmp_73_fu_1165_p2 & sel_tmp6_fu_1258_p2);

assign sel_tmp8_fu_1270_p2 = (tmp_77_fu_1201_p2 ^ 1'd1);

assign sel_tmp9_fu_1276_p2 = (sel_tmp8_fu_1270_p2 & sel_tmp7_fu_1264_p2);

assign sel_tmp_fu_1282_p2 = (tmp_77_fu_1201_p2 & sel_tmp7_fu_1264_p2);

assign sh_amt_cast2_fu_1332_p1 = sh_amt_reg_1619;

assign sh_amt_cast_fu_1335_p1 = sh_amt_reg_1619;

assign sh_amt_fu_1183_p3 = ((tmp_73_fu_1165_p2[0:0] === 1'b1) ? tmp_74_fu_1171_p2 : tmp_75_fu_1177_p2);

assign tmp_100_cast_cast_ca_fu_723_p3 = ((tmp_68_reg_1500[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign tmp_100_fu_1122_p1 = ireg_V_fu_1096_p1[51:0];

assign tmp_101_fu_1197_p1 = man_V_2_fu_1152_p3[15:0];

assign tmp_102_fu_1207_p4 = {{sh_amt_fu_1183_p3[11:4]}};

assign tmp_103_fu_1347_p1 = tmp_80_fu_1342_p2[15:0];

assign tmp_104_cast_cast_ca_fu_1044_p3 = ((tmp_95_reg_1577[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign tmp_104_fu_1226_p3 = ireg_V_to_int_fu_1223_p1[32'd31];

assign tmp_1_fu_372_p3 = {{j_reg_267}, {1'd0}};

assign tmp_24_fu_458_p1 = i1_reg_302;

assign tmp_25_fu_483_p2 = ((tmp_V_13_reg_1443 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_26_fu_787_p1 = i2_reg_313;

assign tmp_27_cast_fu_406_p1 = i_reg_278;

assign tmp_27_fu_420_p1 = i_reg_278;

assign tmp_28_fu_529_p2 = (32'd16 - l_reg_1469);

assign tmp_2_fu_384_p2 = (p_shl1_cast_fu_380_p1 + p_shl_cast_fu_368_p1);

assign tmp_30_fu_792_p2 = ((output_V_q0 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_31_fu_585_p2 = ((p_Result_4_fu_580_p2 != 16'd0) ? 1'b1 : 1'b0);

assign tmp_32_fu_534_p1 = tmp_28_fu_529_p2[15:0];

assign tmp_33_fu_850_p2 = (32'd16 - l_3_reg_1546);

assign tmp_34_fu_544_p4 = {{lsb_index_fu_538_p2[31:1]}};

assign tmp_35_fu_611_p2 = ($signed(16'd65512) + $signed(tmp_32_fu_534_p1));

assign tmp_36_fu_560_p1 = tmp_28_fu_529_p2[4:0];

assign tmp_37_fu_564_p2 = (5'd9 - tmp_36_fu_560_p1);

assign tmp_38_fu_570_p1 = tmp_37_fu_564_p2;

assign tmp_39_fu_624_p2 = (rev_fu_605_p2 & p_Result_5_fu_617_p3);

assign tmp_40_fu_630_p2 = (tmp_39_fu_624_p2 | a_fu_591_p2);

assign tmp_41_fu_636_p3 = {{31'd0}, {tmp_40_fu_630_p2}};

assign tmp_42_fu_644_p2 = (($signed(lsb_index_fu_538_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_43_fu_656_p2 = ($signed(32'd4294967271) + $signed(tmp_28_reg_1479));

assign tmp_44_fu_661_p2 = m_cast_fu_653_p1 >> tmp_43_fu_656_p2;

assign tmp_45_fu_906_p2 = ((p_Result_10_fu_901_p2 != 16'd0) ? 1'b1 : 1'b0);

assign tmp_46_fu_574_p2 = 16'd65535 >> tmp_38_fu_570_p1;

assign tmp_47_fu_932_p2 = ($signed(16'd65512) + $signed(tmp_85_fu_855_p1));

assign tmp_48_fu_671_p2 = (32'd25 - tmp_28_reg_1479);

assign tmp_49_fu_676_p1 = tmp_48_fu_671_p2;

assign tmp_4_cast_fu_415_p1 = tmp_4_fu_410_p2;

assign tmp_4_fu_410_p2 = (tmp_27_cast_fu_406_p1 + tmp_2_reg_1392);

assign tmp_50_cast_fu_667_p1 = tmp_44_fu_661_p2;

assign tmp_50_fu_680_p2 = m_fu_650_p1 << tmp_49_fu_676_p1;

assign tmp_51_fu_693_p1 = tmp_41_reg_1485;

assign tmp_52_fu_730_p2 = (8'd5 - tmp_79_reg_1474);

assign tmp_53_fu_741_p3 = {{p_Result_14_reg_1450}, {p_Repl2_3_trunc_fu_735_p2}};

assign tmp_54_fu_597_p3 = lsb_index_fu_538_p2[32'd31];

assign tmp_55_fu_945_p2 = (rev1_fu_926_p2 & p_Result_7_fu_938_p3);

assign tmp_56_fu_957_p3 = {{31'd0}, {tmp_60_fu_951_p2}};

assign tmp_57_fu_764_p1 = tmp_81_fu_760_p1;

assign tmp_58_fu_965_p2 = (($signed(lsb_index_1_fu_859_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_59_fu_977_p2 = ($signed(32'd4294967271) + $signed(tmp_33_reg_1556));

assign tmp_60_fu_951_p2 = (tmp_55_fu_945_p2 | a_1_fu_912_p2);

assign tmp_61_fu_982_p2 = m_3_cast_fu_974_p1 >> tmp_59_fu_977_p2;

assign tmp_62_fu_992_p2 = (32'd25 - tmp_33_reg_1556);

assign tmp_63_fu_997_p1 = tmp_62_fu_992_p2;

assign tmp_64_fu_1001_p2 = m_3_fu_971_p1 << tmp_63_fu_997_p1;

assign tmp_65_cast_fu_988_p1 = tmp_61_fu_982_p2;

assign tmp_65_fu_1014_p1 = tmp_56_reg_1562;

assign tmp_66_fu_1051_p2 = (8'd5 - tmp_96_reg_1551);

assign tmp_67_fu_1062_p3 = {{p_Result_17_reg_1533}, {p_Repl2_5_trunc_fu_1056_p2}};

assign tmp_69_fu_1085_p1 = tmp_97_fu_1081_p1;

assign tmp_70_fu_1132_p1 = exp_tmp_V_reg_1598;

assign tmp_71_fu_1135_p3 = {{1'd1}, {tmp_100_reg_1603}};

assign tmp_72_fu_1126_p2 = ((tmp_98_fu_1100_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_73_fu_1165_p2 = (($signed(F2_fu_1159_p2) > $signed(12'd11)) ? 1'b1 : 1'b0);

assign tmp_74_fu_1171_p2 = ($signed(12'd4085) + $signed(F2_fu_1159_p2));

assign tmp_75_fu_1177_p2 = (12'd11 - F2_fu_1159_p2);

assign tmp_76_fu_1191_p2 = ((F2_fu_1159_p2 == 12'd11) ? 1'b1 : 1'b0);

assign tmp_77_fu_1201_p2 = ((sh_amt_fu_1183_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_78_fu_1338_p1 = $unsigned(sh_amt_cast_fu_1335_p1);

assign tmp_79_fu_525_p1 = l_fu_517_p3[7:0];

assign tmp_80_fu_1342_p2 = $signed(man_V_2_reg_1614) >>> tmp_78_fu_1338_p1;

assign tmp_81_fu_760_p1 = p_Result_16_fu_748_p5[31:0];

assign tmp_82_fu_1234_p3 = ((tmp_104_fu_1226_p3[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign tmp_83_fu_1351_p2 = tmp_101_reg_1625 << sh_amt_cast2_fu_1332_p1;

assign tmp_85_fu_855_p1 = tmp_33_fu_850_p2[15:0];

assign tmp_88_fu_865_p4 = {{lsb_index_1_fu_859_p2[31:1]}};

assign tmp_89_fu_881_p1 = tmp_33_fu_850_p2[4:0];

assign tmp_90_fu_885_p2 = (5'd9 - tmp_89_fu_881_p1);

assign tmp_91_fu_891_p1 = tmp_90_fu_885_p2;

assign tmp_92_fu_895_p2 = 16'd65535 >> tmp_91_fu_891_p1;

assign tmp_94_fu_918_p3 = lsb_index_1_fu_859_p2[32'd31];

assign tmp_96_fu_846_p1 = l_3_fu_838_p3[7:0];

assign tmp_97_fu_1081_p1 = p_Result_19_fu_1069_p5[31:0];

assign tmp_98_fu_1100_p1 = ireg_V_fu_1096_p1[62:0];

assign tmp_V_11_fu_1369_p3 = ((or_cond2_reg_1645[0:0] === 1'b1) ? newSel2_fu_1363_p3 : 16'd0);

assign tmp_V_13_fu_468_p2 = ($signed(p_Val2_1_cast_fu_464_p1) + $signed(output_V_q0));

assign tmp_V_14_fu_493_p3 = ((p_Result_14_reg_1450[0:0] === 1'b1) ? tmp_V_fu_488_p2 : tmp_V_13_reg_1443);

assign tmp_V_16_fu_812_p3 = ((p_Result_17_fu_798_p3[0:0] === 1'b1) ? tmp_V_2_fu_806_p2 : output_V_q0);

assign tmp_V_2_fu_806_p2 = (16'd0 - output_V_q0);

assign tmp_V_fu_488_p2 = (16'd0 - tmp_V_13_reg_1443);

assign tmp_fu_360_p3 = {{j_reg_267}, {3'd0}};

assign tmp_s_fu_390_p1 = $signed(in_V_V_dout);

assign x_assign_1_fu_1089_p3 = ((tmp_30_reg_1528[0:0] === 1'b1) ? 32'd0 : tmp_69_fu_1085_p1);

assign x_assign_fu_768_p3 = ((tmp_25_reg_1456[0:0] === 1'b1) ? 32'd0 : tmp_57_fu_764_p1);

always @ (posedge ap_clk) begin
    tmp_2_reg_1392[0] <= 1'b0;
    tmp_41_reg_1485[31:1] <= 31'b0000000000000000000000000000000;
    tmp_56_reg_1562[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //fc3
